<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gamesky.card.dao.mapper.GameMapper" >
  <resultMap id="BaseResultMap" type="com.gamesky.card.core.model.Game" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="ios_id" property="iosId" jdbcType="VARCHAR" />
    <result column="recommend" property="recommend" jdbcType="BIT" />
    <result column="identifier" property="identifier" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="platform" property="platform" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="REAL" />
    <result column="closed" property="closed" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.gamesky.card.core.model.Game" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, icon, url, ios_id, recommend, identifier, total, sort, platform, score, 
    closed, create_time, modify_time, type
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.gamesky.card.core.model.GameExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from game
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitOffset != null and limitOffset>=0" >
      limit #{limitOffset}, #{limit}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gamesky.card.core.model.GameExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from game
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitOffset != null and limitOffset>=0" >
      limit #{limitOffset}, #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from game
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from game
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gamesky.card.core.model.GameExample" >
    delete from game
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gamesky.card.core.model.Game" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into game (name, icon, url, 
      ios_id, recommend, identifier, 
      total, sort, platform, 
      score, closed, create_time, 
      modify_time, type, description
      )
    values (#{name,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{iosId,jdbcType=VARCHAR}, #{recommend,jdbcType=BIT}, #{identifier,jdbcType=VARCHAR}, 
      #{total,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{platform,jdbcType=VARCHAR}, 
      #{score,jdbcType=REAL}, #{closed,jdbcType=BIT}, #{createTime,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gamesky.card.core.model.Game" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into game
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="iosId != null" >
        ios_id,
      </if>
      <if test="recommend != null" >
        recommend,
      </if>
      <if test="identifier != null" >
        identifier,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="platform != null" >
        platform,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="closed != null" >
        closed,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="iosId != null" >
        #{iosId,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null" >
        #{recommend,jdbcType=BIT},
      </if>
      <if test="identifier != null" >
        #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="platform != null" >
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=REAL},
      </if>
      <if test="closed != null" >
        #{closed,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gamesky.card.core.model.GameExample" resultType="java.lang.Integer" >
    select count(*) from game
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update game
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.iosId != null" >
        ios_id = #{record.iosId,jdbcType=VARCHAR},
      </if>
      <if test="record.recommend != null" >
        recommend = #{record.recommend,jdbcType=BIT},
      </if>
      <if test="record.identifier != null" >
        identifier = #{record.identifier,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.platform != null" >
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=REAL},
      </if>
      <if test="record.closed != null" >
        closed = #{record.closed,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update game
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      ios_id = #{record.iosId,jdbcType=VARCHAR},
      recommend = #{record.recommend,jdbcType=BIT},
      identifier = #{record.identifier,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      platform = #{record.platform,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=REAL},
      closed = #{record.closed,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update game
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      ios_id = #{record.iosId,jdbcType=VARCHAR},
      recommend = #{record.recommend,jdbcType=BIT},
      identifier = #{record.identifier,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      platform = #{record.platform,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=REAL},
      closed = #{record.closed,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gamesky.card.core.model.Game" >
    update game
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="iosId != null" >
        ios_id = #{iosId,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null" >
        recommend = #{recommend,jdbcType=BIT},
      </if>
      <if test="identifier != null" >
        identifier = #{identifier,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="platform != null" >
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=REAL},
      </if>
      <if test="closed != null" >
        closed = #{closed,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gamesky.card.core.model.Game" >
    update game
    set name = #{name,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      ios_id = #{iosId,jdbcType=VARCHAR},
      recommend = #{recommend,jdbcType=BIT},
      identifier = #{identifier,jdbcType=VARCHAR},
      total = #{total,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      platform = #{platform,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL},
      closed = #{closed,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gamesky.card.core.model.Game" >
    update game
    set name = #{name,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      ios_id = #{iosId,jdbcType=VARCHAR},
      recommend = #{recommend,jdbcType=BIT},
      identifier = #{identifier,jdbcType=VARCHAR},
      total = #{total,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      platform = #{platform,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL},
      closed = #{closed,jdbcType=BIT},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>