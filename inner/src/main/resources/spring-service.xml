<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="com.gamesky.card.service"/>
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="30"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
    </bean>


    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}" p:port="${redis.port}" p:poolConfig-ref="poolConfig"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <bean id="jedis" class="redis.clients.jedis.Jedis">
        <constructor-arg name="host" value="${redis.host}"/>
        <constructor-arg name="port" value="${redis.port}"/>
    </bean>


    <bean id="shortMessageSender" class="com.gamesky.card.service.impl.ShortMessageSender">
        <property name="url" value="http://api.app.7k7k.com/my/smmsg"/>
    </bean>

    <bean id="codeGenerator" class="com.gamesky.card.service.impl.DefaultCodeGenerator"/>

    <bean id="marshaller" class="com.gamesky.card.service.RedisMarshaller">
        <property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>
    </bean>

    <bean id="notifyCallable" class="com.gamesky.card.service.NotifyCallable"/>

    <bean id="smsService" class="com.gamesky.card.service.impl.CheckCodeServiceImpl">
        <property name="marshaller" ref="marshaller"/>
        <property name="placeholder" value="验证码：{0}，用于手机验证，请尽快使用，如非本人操作，请忽略本短信。"/>
        <property name="messageSenders">
            <list>
                <ref bean="shortMessageSender"/>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
        <property name="maxUploadSize">
            <value>32505856</value>
            <!-- 上传文件大小限制为31M，31*1024*1024 -->
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>


    <bean id="uploadMarshaller" class="com.gamesky.card.service.LocalFileMarshaller"/>

    <bean id="globalLock" class="com.gamesky.card.service.RedisGlobalLock">
        <property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>
    </bean>


    <bean name="loginFilter" class="com.gamesky.card.inner.controller.AuthenticateFilter">
        <property name="ignoreUrl">
            <list>
                <value>/login</value>
                <value>/login/check</value>
                <value>/checkcode</value>
            </list>
        </property>
        <property name="resources">
            <list>
                <value>/js/</value>
                <value>/img/</value>
                <value>/css/</value>
                <value>/uploadify/</value>
                <value>/upload/</value>
                <value>/laydate/</value>
                <value>/fonts/</value>
            </list>
        </property>
    </bean>


    <!-- 这里的是为了下面的 Session策略过滤器提供构造函数传入的参数，因为Session过滤器要依赖该对象来构造，所以创建一个先 -->
    <bean name="redisOperationsSessionRepository"
          class="org.springframework.session.data.redis.RedisOperationsSessionRepository">
        <constructor-arg ref="jedisConnectionFactory"/>
    </bean>

    <!-- 这个是Session策略过滤器，即将容器原有的Session持久化机制，代替为Spring的 Redis持久化Session机制。 -->
    <!-- 注意，这个名字与 web.xml里的targetBean的下value是要一致的。 -->
    <bean name="springSession" class="org.springframework.session.web.http.SessionRepositoryFilter">
        <constructor-arg ref="redisOperationsSessionRepository"/>
    </bean>
</beans>